# automatic
@Uppercase = [ A Aacute Abreve Acircumflex uni0200 Adieresis uni1EA0 Agrave uni0202 Amacron Aogonek Aring Atilde AE AEacute B C Cacute Ccaron Ccedilla Ccircumflex Cdotaccent D Eth Dcaron Dcroat E Eacute Ebreve Ecaron Ecircumflex uni0204 Edieresis Edotaccent uni1EB8 Egrave uni0206 Emacron Eogonek uni1EBC F G Gbreve Gcaron Gcircumflex Gdotaccent H Hcircumflex I Iacute Ibreve Icircumflex uni0208 Idieresis Idotaccent uni1ECA Igrave uni020A Imacron Itilde J Jcircumflex K L Lacute Lcaron Lslash M N Nacute Ncaron Eng Ntilde O Oacute Obreve Ocircumflex uni020C Odieresis uni1ECC Ograve Ohungarumlaut uni020E Omacron Oslash Oslashacute Otilde OE P Thorn Q R Racute Rcaron uni0210 uni0212 S Sacute Scaron Scircumflex uni1E9E uni018F T Tcaron U Uacute Ubreve Ucircumflex uni0214 Udieresis uni1EE4 Ugrave Uhungarumlaut uni0216 Umacron Uring Utilde V W Wacute Wcircumflex Wdieresis Wgrave X Y Yacute Ycircumflex Ydieresis Ygrave uni0232 uni1EF8 Z Zacute Zcaron Zdotaccent uni0410 uni0411 uni0412 uni0413 uni0403 uni0490 uni0414 uni0415 uni0400 uni0401 uni0416 uni0417 uni0418 uni0419 uni040D uni041A uni040C uni041B uni041C uni041D uni041E uni041F uni0420 uni0421 uni0422 uni0423 uni040E uni0424 uni0425 uni0427 uni0426 uni0428 uni0429 uni040F uni042C uni042A uni042B uni0409 uni040A uni0405 uni0404 uni042D uni0406 uni0407 uni0408 uni040B uni042E uni042F uni0402 uni0462 uni046A uni0472 uni0474 uni0492 uni0494 uni0496 uni0498 uni049A uni049C uni04A0 uni04A2 uni0524 uni04AA uni04AE uni04B0 uni04B6 uni04B8 uni04BA uni04C0 uni04C1 uni04CB uni04D0 uni04D2 uni04D6 uni04D8 uni04DC uni04DE uni04E2 uni04E4 uni04E6 uni04E8 uni04EE uni04F0 uni04F2 uni04F4 uni04F6 uni04F8 uni051A uni051C ];

# Prefix: Languagesystems
# automatic
languagesystem DFLT dflt;

feature aalt {
# automatic
feature ccmp;
feature subs;
feature sups;
feature frac;
feature ordn;
feature lnum;
feature pnum;
feature tnum;
feature onum;
feature case;
feature numr;
feature dnom;
} aalt;

feature ccmp {
# automatic
lookup ccmp_Other_1 {
	@CombiningTopAccents = [acutecomb brevecomb breveinvertedcomb caroncomb circumflexcomb dblgravecomb dieresiscomb dotaccentcomb gravecomb hungarumlautcomb macroncomb ringcomb tildecomb];
	@CombiningNonTopAccents = [brevebelowcomb cedillacomb dieresisbelowcomb dotbelowcomb macronbelowcomb ogonekcomb strokeshortcomb];
	sub [i j]' @CombiningTopAccents by [idotless jdotless];
	sub [i j]' @CombiningNonTopAccents @CombiningTopAccents by [idotless jdotless];
	@Markscomb = [dieresiscomb dotaccentcomb gravecomb acutecomb hungarumlautcomb circumflexcomb caroncomb brevecomb ringcomb tildecomb macroncomb dblgravecomb breveinvertedcomb dotbelowcomb dieresisbelowcomb brevebelowcomb macronbelowcomb];
	@MarkscombCase = [dieresiscomb.case dotaccentcomb.case gravecomb.case acutecomb.case hungarumlautcomb.case circumflexcomb.case caroncomb.case brevecomb.case ringcomb.case tildecomb.case macroncomb.case dblgravecomb.case breveinvertedcomb.case dotbelowcomb.case dieresisbelowcomb.case brevebelowcomb.case macronbelowcomb.case];
	sub @Markscomb @Markscomb' by @MarkscombCase;
	sub @Uppercase @Markscomb' by @MarkscombCase;
} ccmp_Other_1;

lookup ccmp_Other_2 {
	sub @Markscomb' @MarkscombCase by @MarkscombCase;
	sub @MarkscombCase @Markscomb' by @MarkscombCase;
} ccmp_Other_2;
} ccmp;

feature subs {
# automatic
sub zero by zeroinferior;
sub one by oneinferior;
sub two by twoinferior;
sub three by threeinferior;
sub four by fourinferior;
sub five by fiveinferior;
sub six by sixinferior;
sub seven by seveninferior;
sub eight by eightinferior;
sub nine by nineinferior;
} subs;

feature sups {
# automatic
sub zero by zerosuperior;
sub one by onesuperior;
sub two by twosuperior;
sub three by threesuperior;
sub four by foursuperior;
sub five by fivesuperior;
sub six by sixsuperior;
sub seven by sevensuperior;
sub eight by eightsuperior;
sub nine by ninesuperior;
} sups;

feature numr {
# automatic
sub zero by zero.numr;
sub one by one.numr;
sub two by two.numr;
sub three by three.numr;
sub four by four.numr;
sub five by five.numr;
sub six by six.numr;
sub seven by seven.numr;
sub eight by eight.numr;
sub nine by nine.numr;
} numr;

feature dnom {
# automatic
sub zero by zero.dnom;
sub one by one.dnom;
sub two by two.dnom;
sub three by three.dnom;
sub four by four.dnom;
sub five by five.dnom;
sub six by six.dnom;
sub seven by seven.dnom;
sub eight by eight.dnom;
sub nine by nine.dnom;
} dnom;

feature frac {
# automatic
lookup FRAC {
	sub slash by fraction;
} FRAC;
lookup UP {
	sub [zero one two three four five six seven eight nine] by [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
} UP;
lookup DOWN {
	sub fraction [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr]' by [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
	sub [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom] [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr]' by [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
} DOWN;
} frac;

feature ordn {
# automatic
sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;
sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;
sub N o period by numero;
} ordn;

feature lnum {
# automatic
sub zero.osf by zero;
sub one.osf by one;
sub two.osf by two;
sub three.osf by three;
sub four.osf by four;
sub five.osf by five;
sub six.osf by six;
sub seven.osf by seven;
sub eight.osf by eight;
sub nine.osf by nine;
} lnum;

feature pnum {
# automatic
sub one.tf by one;
sub seven.tf by seven;
sub zero.tosf by zero.osf;
sub one.tosf by one.osf;
sub two.tosf by two.osf;
sub three.tosf by three.osf;
sub four.tosf by four.osf;
sub five.tosf by five.osf;
sub six.tosf by six.osf;
sub seven.tosf by seven.osf;
sub eight.tosf by eight.osf;
sub nine.tosf by nine.osf;
} pnum;

feature tnum {
# automatic
sub one by one.tf;
sub seven by seven.tf;
sub zero.osf by zero.tosf;
sub one.osf by one.tosf;
sub two.osf by two.tosf;
sub three.osf by three.tosf;
sub four.osf by four.tosf;
sub five.osf by five.tosf;
sub six.osf by six.tosf;
sub seven.osf by seven.tosf;
sub eight.osf by eight.tosf;
sub nine.osf by nine.tosf;
} tnum;

feature onum {
# automatic
sub one.tf by one.tosf;
sub seven.tf by seven.tosf;
sub zero by zero.osf;
sub one by one.osf;
sub two by two.osf;
sub three by three.osf;
sub four by four.osf;
sub five by five.osf;
sub six by six.osf;
sub seven by seven.osf;
sub eight by eight.osf;
sub nine by nine.osf;
} onum;

feature case {
# automatic
sub dieresiscomb by dieresiscomb.case;
sub dotaccentcomb by dotaccentcomb.case;
sub gravecomb by gravecomb.case;
sub acutecomb by acutecomb.case;
sub hungarumlautcomb by hungarumlautcomb.case;
sub circumflexcomb by circumflexcomb.case;
sub caroncomb by caroncomb.case;
sub brevecomb by brevecomb.case;
sub ringcomb by ringcomb.case;
sub tildecomb by tildecomb.case;
sub macroncomb by macroncomb.case;
sub dblgravecomb by dblgravecomb.case;
sub breveinvertedcomb by breveinvertedcomb.case;
sub dotbelowcomb by dotbelowcomb.case;
sub dieresisbelowcomb by dieresisbelowcomb.case;
sub brevebelowcomb by brevebelowcomb.case;
sub macronbelowcomb by macronbelowcomb.case;
} case;

feature dlig {
sub En-cy Ge-cy by Enghe-cy;
sub en-cy ge-cy by enghe-cy;
} dlig;

feature liga {
# automatic
sub f i by fi;
sub f l by fl;
} liga;

